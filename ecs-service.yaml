AWSTemplateFormatVersion: '2010-09-09'
Description: Add an ECS Service to an exsisting ECS cluster

Parameters:

  # Logical parameters
  MicroServiceUniqueName:
    Type: String
    Description: Microservice unique (logical) name

  ECSClusterName:
    Type: String
    Description: ECS Cluster Name where the service is going to be deployed

  AlarmSNSTopicArn:
    Type: String
    Default: '-'
    Description: 'An ARN of an SNS topic where to send alarm when DLQ contain messages'

  AlbSecurityGroup:
    Type: String
    Default: ''
    Description: Security Group of ALB

  AdditionalMicroserviceSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Default: ""
    Description: Additional security group to assign to the microservice

  MappedPaths:
    Type: List<String>
    Description: Comma separated list of application load balancer listener rule path pattern

  ContainerImageURI:
    Type: String
    Description: Container image URI

  # 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
  # 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
  # 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
  # 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
  # 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
  CpuValue:
    Type: Number
    Description: Fargate virtual CPU quantity 1024 equals one vCPU

  # 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
  # 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
  # 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
  # Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
  # Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
  MemoryAmount:
    Type: String
    Description: memory amount reserved to the task pod


  # Technical parameters
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: the VPC id of the vpc where's the cluster containing the current service is deployed
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: the subnets where the service is going to be deployed
  LoadBalancerListenerArn:
    Type: String
    Description: Application load balancer listener ARN
  LoadbalancerRulePriority:
    Type: Number
    Description: Routing rules in the dame load balancer listener must have different priorities

  # Container environment map, maximum 40 entry
  ContainerEnvEntry1:
    Description: 1st container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry2:
    Description: 2nd container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry3:
    Description: 3rd container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry4:
    Description: 4th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry5:
    Description: 5th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry6:
    Description: 6th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry7:
    Description: 7th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry8:
    Description: 8th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry9:
    Description: 9th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry10:
    Description: 10th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry11:
    Description: 11th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry12:
    Description: 12th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry13:
    Description: 13th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry14:
    Description: 14th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry15:
    Description: 15th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry16:
    Description: 16th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry17:
    Description: 17th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry18:
    Description: 18th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry19:
    Description: 19th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry20:
    Description: 20th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry21:
    Description: 21st container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry22:
    Description: 22nd container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry23:
    Description: 23rd container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry24:
    Description: 24th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry25:
    Description: 25th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry26:
    Description: 26th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry27:
    Description: 27th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry28:
    Description: 28th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry29:
    Description: 29th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry30:
    Description: 30th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry31:
    Description: 31st container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry32:
    Description: 32nd container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry33:
    Description: 33rd container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry34:
    Description: 34th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry35:
    Description: 35th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry36:
    Description: 36th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry37:
    Description: 37th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry38:
    Description: 38th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry39:
    Description: 39th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerEnvEntry40:
    Description: 40th container environment entry in the form key=value
    Type: String
    Default: ''
  ContainerSecret1:
    Description: 1st container secret in the form key=secret arn
    Type: String
    Default: ''
  ContainerSecret2:
    Description: 2nd container secret in the form key=secret arn
    Type: String
    Default: ''


Conditions:
  HasAlarmTopic: !Not [ !Equals [ !Ref AlarmSNSTopicArn, '-' ] ]
  HasAlbSecurityGroup: !Not [ !Equals [ !Ref AlbSecurityGroup, '' ] ]

  Env1Exist: !Not [ !Equals [!Ref ContainerEnvEntry1, '']]
  Env2Exist: !Not [ !Equals [!Ref ContainerEnvEntry2, '']]
  Env3Exist: !Not [ !Equals [!Ref ContainerEnvEntry3, '']]
  Env4Exist: !Not [ !Equals [!Ref ContainerEnvEntry4, '']]
  Env5Exist: !Not [ !Equals [!Ref ContainerEnvEntry5, '']]
  Env6Exist: !Not [ !Equals [!Ref ContainerEnvEntry6, '']]
  Env7Exist: !Not [ !Equals [!Ref ContainerEnvEntry7, '']]
  Env8Exist: !Not [ !Equals [!Ref ContainerEnvEntry8, '']]
  Env9Exist: !Not [ !Equals [!Ref ContainerEnvEntry9, '']]
  Env10Exist: !Not [ !Equals [!Ref ContainerEnvEntry10, '']]
  Env11Exist: !Not [ !Equals [!Ref ContainerEnvEntry11, '']]
  Env12Exist: !Not [ !Equals [!Ref ContainerEnvEntry12, '']]
  Env13Exist: !Not [ !Equals [!Ref ContainerEnvEntry13, '']]
  Env14Exist: !Not [ !Equals [!Ref ContainerEnvEntry14, '']]
  Env15Exist: !Not [ !Equals [!Ref ContainerEnvEntry15, '']]
  Env16Exist: !Not [ !Equals [!Ref ContainerEnvEntry16, '']]
  Env17Exist: !Not [ !Equals [!Ref ContainerEnvEntry17, '']]
  Env18Exist: !Not [ !Equals [!Ref ContainerEnvEntry18, '']]
  Env19Exist: !Not [ !Equals [!Ref ContainerEnvEntry19, '']]
  Env20Exist: !Not [ !Equals [!Ref ContainerEnvEntry20, '']]
  Env21Exist: !Not [ !Equals [ !Ref ContainerEnvEntry21, '' ] ]
  Env22Exist: !Not [ !Equals [ !Ref ContainerEnvEntry22, '' ] ]
  Env23Exist: !Not [ !Equals [ !Ref ContainerEnvEntry23, '' ] ]
  Env24Exist: !Not [ !Equals [ !Ref ContainerEnvEntry24, '' ] ]
  Env25Exist: !Not [ !Equals [ !Ref ContainerEnvEntry25, '' ] ]
  Env26Exist: !Not [ !Equals [ !Ref ContainerEnvEntry26, '' ] ]
  Env27Exist: !Not [ !Equals [ !Ref ContainerEnvEntry27, '' ] ]
  Env28Exist: !Not [ !Equals [ !Ref ContainerEnvEntry28, '' ] ]
  Env29Exist: !Not [ !Equals [ !Ref ContainerEnvEntry29, '' ] ]
  Env30Exist: !Not [ !Equals [ !Ref ContainerEnvEntry30, '' ] ]
  Env31Exist: !Not [ !Equals [ !Ref ContainerEnvEntry31, '' ] ]
  Env32Exist: !Not [ !Equals [ !Ref ContainerEnvEntry32, '' ] ]
  Env33Exist: !Not [ !Equals [ !Ref ContainerEnvEntry33, '' ] ]
  Env34Exist: !Not [ !Equals [ !Ref ContainerEnvEntry34, '' ] ]
  Env35Exist: !Not [ !Equals [ !Ref ContainerEnvEntry35, '' ] ]
  Env36Exist: !Not [ !Equals [ !Ref ContainerEnvEntry36, '' ] ]
  Env37Exist: !Not [ !Equals [ !Ref ContainerEnvEntry37, '' ] ]
  Env38Exist: !Not [ !Equals [ !Ref ContainerEnvEntry38, '' ] ]
  Env39Exist: !Not [ !Equals [ !Ref ContainerEnvEntry39, '' ] ]
  Env40Exist: !Not [ !Equals [ !Ref ContainerEnvEntry40, '' ] ]
  Secret1Exist: !Not [ !Equals [ !Ref ContainerSecret1, '' ] ]
  Secret2Exist: !Not [ !Equals [ !Ref ContainerSecret2, '' ] ]


Resources:

  # ECS Service
  ECSService:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRoutingRule
    Properties:
      Cluster: !Ref ECSClusterName
      TaskDefinition: !Ref TaskDefinition
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 1
      # This may need to be adjusted if the container takes a while to start up
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      NetworkConfiguration:
        AwsvpcConfiguration:
          # change to DISABLED if you're using private subnets that have access to a NAT gateway
          AssignPublicIp: ENABLED
          Subnets: !Ref Subnets
          SecurityGroups:
            - !Ref EcsServiceSecurityGroup
            - !Ref AdditionalMicroserviceSecurityGroup
      LoadBalancers:
        - ContainerName: !Sub '${MicroServiceUniqueName}'
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup

  # ECS Service security group
  EcsServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${MicroServiceUniqueName}-EcsSvcSecGrp'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - 'Fn::If':
          - HasAlbSecurityGroup
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            SourceSecurityGroupId: !Ref AlbSecurityGroup
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            CidrIp: 0.0.0.0/0

  # ECS Task
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    # Makes sure the log group is created before it is used.
    DependsOn: LogGroup
    Properties:
      # Name of the task definition. Subsequent versions of the task definition are grouped together under this name.
      Family: !Ref MicroServiceUniqueName
      # awsvpc is required for Fargate
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref CpuValue
      Memory: !Ref MemoryAmount
      # A role needed by ECS.
      # "The ARN of the task execution role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role."
      # "There is an optional task execution IAM role that you can specify with Fargate to allow your Fargate tasks to make API calls to Amazon ECR."
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      # "The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that grants containers in the task permission to call AWS APIs on your behalf."
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: !Sub '${MicroServiceUniqueName}'
          Image: !Ref ContainerImageURI
          Secrets:
            - 'Fn::If':
              - Secret1Exist
              - Name: !Select [ 0, !Split [ "=", !Ref ContainerSecret1 ] ]
                ValueFrom:
                  !Select [ 1, !Split [ "=", !Ref ContainerSecret1 ] ]
              - !Ref "AWS::NoValue"
            - 'Fn::If':
              - Secret2Exist
              - Name: !Select [ 0, !Split [ "=", !Ref ContainerSecret2 ] ]
                ValueFrom:
                  !Select [ 1, !Split [ "=", !Ref ContainerSecret2 ] ]
              - !Ref "AWS::NoValue"
          Environment:
            - 'Fn::If':
                - Env1Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry1 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry1 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env2Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry2 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry2 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env3Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry3 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry3 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env4Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry4 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry4 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env5Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry5 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry5 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env6Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry6 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry6 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env7Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry7 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry7 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env8Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry8 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry8 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env9Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry9 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry9 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env10Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry10 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry10 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env11Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry11 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry11 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env12Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry12 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry12 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env13Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry13 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry13 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env14Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry14 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry14 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env15Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry15 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry15 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env16Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry16 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry16 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env17Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry17 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry17 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env18Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry18 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry18 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env19Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry19 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry19 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env20Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry20 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry20 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env21Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry21 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry21 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env22Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry22 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry22 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env23Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry23 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry23 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env24Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry24 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry24 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env25Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry25 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry25 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env26Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry26 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry26 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env27Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry27 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry27 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env28Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry28 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry28 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env29Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry29 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry29 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env30Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry30 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry30 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env31Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry31 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry31 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env32Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry32 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry32 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env33Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry33 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry33 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env34Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry34 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry34 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env35Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry35 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry35 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env36Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry36 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry36 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env37Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry37 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry37 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env38Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry38 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry38 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env39Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry39 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry39 ] ]
                - !Ref "AWS::NoValue"
            - 'Fn::If':
                - Env40Exist
                - Name: !Select [ 0, !Split [ "=", !Ref ContainerEnvEntry40 ] ]
                  Value: !Select [ 1, !Split [ "=", !Ref ContainerEnvEntry40 ] ]
                - !Ref "AWS::NoValue"
          PortMappings:
            - ContainerPort: 8080
          # Send logs to CloudWatch Logs
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${MicroServiceUniqueName}'
      RetentionInDays: 14

  # A role needed by ECS
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${MicroServiceUniqueName}-ExecutionRole'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
      Policies:
        - PolicyName: !Sub '${MicroServiceUniqueName}-ExecutionPolicy'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - kms:Decrypt
                Resource:
                  - Fn::Sub: "arn:${AWS::Partition}:secretsmanager:*:${AWS::AccountId}:secret:*"

  # A role for the containers
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${MicroServiceUniqueName}-TaskRole'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'

  # Role policy needed to access the ECR registry of the CiCd account
  EcrAccessTaskPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${MicroServiceUniqueName}-EcrAccessTaskPolicy'
      Roles:
        - !Ref TaskRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Resource:
              - '*'

  CloudFormationTaskPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${MicroServiceUniqueName}-CloudFormationTaskPolicy'
      Roles:
        - !Ref TaskRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:ListStackResources
            Resource:
              - '*'

  # Load balancer target group
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      Protocol: HTTP
      Port: 8080
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 300
      HealthCheckPath: /status
      HealthCheckPort: 8080
      HealthCheckProtocol: HTTP
      Matcher:
        HttpCode: 200
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60 # default is 300
      VpcId: !Ref VpcId

  # Load balancer forward rule; forward only path pattern defined with MappedPaths
  LoadBalancerRoutingRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListenerArn
      Priority: !Ref LoadbalancerRulePriority
      Conditions:
        - Field: path-pattern
          Values: !Ref MappedPaths
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
          Order: 1


  # CloudWatch metric to filer ERROR - FATAL lines, in Log group
  ErrorFatalLogsMetricFilter:
    Condition: HasAlarmTopic
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LogGroup
      FilterPattern: '?ERROR ?FATAL ?CRITICAL'
      MetricTransformations:
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${MicroServiceUniqueName}-ErrorFatalMetric"

  # Create alarm
  ErrorFatalLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: HasAlarmTopic
    DependsOn: ErrorFatalLogsMetricFilter
    Properties:
      AlarmName: !Sub "${MicroServiceUniqueName}-ErrorFatalLogs-Alarm"
      AlarmDescription: "CloudWatch alarm for when ECS LogGroup has ERROR or FATAL line."
      AlarmActions:
        - !Ref AlarmSNSTopicArn
      InsufficientDataActions:
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: 1
      MetricName: !Sub "${MicroServiceUniqueName}-ErrorFatalMetric"
      Namespace: "ErrorFatalLogs"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: missing

Outputs:
  ServiceName:
    Description: Nome del servizio di cui fare deploy
    Value: !Sub '${ECSService.Name}'
  ServiceARN:
    Description: Service ARN
    Value: !Sub '${ECSService.ServiceArn}'
  TaskRoleName:
    Description: Container execution role name, useful to attach custom policies
    Value: !Ref TaskRole
