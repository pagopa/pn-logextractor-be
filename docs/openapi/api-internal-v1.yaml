openapi: 3.0.3
info:
  version: 1.0.0
  termsOfService: https://termofservice.it
  title: openapi LogExtractor project
  description: API description for log extractor project
  x-summary: OpenAPI servizi helpdesk pn
  x-api-id: api-helpdesk-pn
  contact:
    email: pn@pagopa.it
  license:
    name: Licenza di PN
    url: 'https://da-definire/'
servers:
  - url: https://api.backoffice.pn.pagopa.it
    description: Production environment
  - url: https://api.backoffice.uat.pn.pagopa.it
    description: Test environment
  - url: https://api.backoffice.dev.pn.pagopa.it
    description: Development environment
tags:
  - name: persons
    description: Operations about a person
  - name: logs
    description: Operations about logs and extractions
  - name: healthCheck
    description: Operations about application status
  - name: downtime
    description: Operations about PN functionalities monitoring

paths:
  '/persons/v1/person-id':
    post:
      tags:
        - persons
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: personalPersonId
      description: >-
        Get the unique identifier of a person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonPersonIdRequestDto'
      responses:
        '200':
          description: The operation has been successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBasicDataResponseDto'
        '400':
          description: Errors during the request validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/persons/v1/tax-id':
    post:
      tags:
        - persons
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: personalTaxId
      description: >-
        Get the tax id of a person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonTaxIdRequestDto'
      responses:
        '200':
          description: The operation has been successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBasicDataResponseDto'
        '400':
          description: Errors during the request validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/logs/v1/notifications/info':
    post:
      tags:
        - logs
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: notificationInfoLogs
      description: >-
        Download the logs archive containing the full info of a notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationInfoRequestDto'
      responses:
        '200':
          description: The operation has been successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseDto'
        '400':
          description: Errors during the request validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/logs/v1/notifications/monthly':
    post:
      tags:
        - logs
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: notificationsInMonth
      description: >-
        Download the logs archive containing the notifications sent 
        in a specific month
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthlyNotificationsRequestDto'
      responses:
        '200':
          description: The operation has been successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseDto'
        '400':
          description: Errors during the request validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/logs/v1/persons':
    post:
      tags:
        - logs
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: personActivityLogs
      description: >-
        Download the logs archive related to a person's own activities or a notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonLogsRequestDto'
      responses:
        '200':
          description: The operation has been successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseDto'
        '400':
          description: Errors during the request validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/logs/v1/processes':
    post:
      tags:
        - logs
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: processLogs
      description: Download the logs archive related to a process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceIdLogsRequestDto'
      responses:
        '200':
          description: >-
            The operation has been successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseDto'
        '400':
          description: Errors during the request validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/logs/v1/sessions':
    post:
      tags:
        - logs
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: sessionLogs
      description: Download the logs archive related to a user session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionLogsRequestDto'
      responses:
        '200':
          description: >-
            The operation has been successfully completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseDto'
        '400':
          description: Errors during the request validation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  "/downtime/v1/status":
    get:
      description: >-
        Get the PN functionalities and inefficiencies list at invocation time
      tags:
        - downtime
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: currentStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PnStatusResponseDto'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  "/downtime/v1/events":
    post:
      description: >-
        Add a new inefficiency start or end event
      tags:
        - downtime
      parameters:
        - in: header
          name: x-pagopa-helpd-uid
          schema:
            type: string
            pattern: '^[A-Za-z0-9-]*$'
          required: true
      security:                                                                # ONLY EXTERNAL
        - bearerAuth: [ ]
      operationId: addStatusChangeEvent
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PnStatusUpdateEventRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseDto'
        '500':
          description: Errors during the request elaboration
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  "/status":
    get:
      tags:
        - healthCheck
      operationId: healthStatus
      description: Get the application status
      responses:
        '204':
          description: The application is running
components:
  schemas:
    SessionLogsRequestDto:
      type: object
      required:
        - ticketNumber
        - jti
        - dateFrom
        - dateTo
        - deanonimization
      properties:
        ticketNumber:
          type: string
        jti:
          type: string
          pattern: '^[A-Za-z0-9-]*$'
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        deanonimization:
          type: boolean
    PersonPersonIdRequestDto:
      type: object
      required:
        - ticketNumber
        - taxId
        - recipientType
      properties:
        ticketNumber:
          type: string
        taxId:
          type: string
          minLength: 16
          maxLength: 16
          pattern: '^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})$'
        recipientType:
          $ref: '#/components/schemas/RecipientTypes'
    PersonTaxIdRequestDto:
      type: object
      required:
        - personId
      properties:
        personId:
          type: string
          minLength: 1
          maxLength: 100
          pattern: '[A-Za-z0-9~_-]*'
    NotificationInfoRequestDto:
      type: object
      required:
        - ticketNumber
        - iun
      properties:
        ticketNumber:
          type: string
        iun:
          type: string
          minLength: 25
          maxLength: 25
    MonthlyNotificationsRequestDto:
      type: object
      required:
        - ticketNumber
        - publicAuthorityName
        - referenceMonth
        - endMonth
      properties:
        ticketNumber:
          type: string
        publicAuthorityName:
          type: string
        referenceMonth:
          type: string
          format: date-time
        endMonth:
          type: string
          format: date-time
    PersonLogsRequestDto:
      type: object
      required:
        - ticketNumber
        - deanonimization
      properties:
        ticketNumber:
          type: string
        deanonimization:
          type: boolean
        taxId:
          type: string
          pattern: '^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})$'
        personId:
          type: string
        iun:
          type: string
          minLength: 25
          maxLength: 25
          pattern: '([A-Za-z]{4})-([A-Za-z]{4})-([A-Za-z]{4})-([0-9]{6})-([A-Za-z]{1})-([0-9]{1})'
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        recipientType:
          $ref: '#/components/schemas/RecipientTypes'
    TraceIdLogsRequestDto:
      type: object
      required:
        - traceId
        - dateFrom
        - dateTo
      properties:
        traceId:
          type: string
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
    GetBasicDataResponseDto:
      type: object
      required:
        - data
        - message
      properties:
        data:
          type: string
        message:
          type: string
    BaseResponseDto:
      title: Success response from the server
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          type: integer
          format: int32
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: 2022-07-27T12:22:33.444Z
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: 'body.order.item[2].quantity'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code
    PnStatusUpdateEventRequestDto:
      title: Event of inefficiency start or end
      type: object
      required:
        - status
        - timestamp
        - functionality
        - sourceType
      properties:
        status:
          $ref: '#/components/schemas/PnFunctionalityStatus'
        timestamp:
          title: the time when the status has changed
          type: string
          format: date-time
        functionality:
          title: functionality list whose availability status has changed
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/PnFunctionality'
        sourceType:
          title: event origin type
          type: string
          enum:
            - OPERATOR
        source:
          title: origin event identifier
          type: string
    PnStatusResponseDto:
      title: PN actual status
      description: >-
        PN functionalities and inefficiencies known list when the request is sent
      type: object
      required:
        - functionalities
        - openIncidents
      properties:
        functionalities:
          title: PN functionalities list
          type: array
          items:
            $ref: '#/components/schemas/PnFunctionality'
        openIncidents:
          title: Inefficiencies list
          type: array
          items:
            $ref: '#/components/schemas/PnDowntimeEntry'
    PnDowntimeEntry:
      title: Data related to a PN inefficiency
      type: object
      required:
        - functionality
        - status
        - startDate
      properties:
        functionality:
          $ref: '#/components/schemas/PnFunctionality'
        status:
          $ref: '#/components/schemas/PnFunctionalityStatus'
        startDate:
          title: Inefficiency start date
          type: string
          format: date-time
        endDate:
          title: Inefficiency end date
          description: >-
            if the inefficiency is still active, this field will be absent or _null_
          type: string
          format: date-time
    RecipientTypes:
      title: PN recipient types
      type: string
      enum: [ "PF", "PG"]
    PnFunctionalityStatus:
      title: PN functionalities' status
      type: string
      enum:
        - KO
        - OK
    PnFunctionality:
      title: PN functionalities
      description: >-
        - __NOTIFICATION_CREATE__: the possibility to create new notifications
        - __NOTIFICATION_VISUALIZATION__: the possibility to visualize the notifications and download the legalfacts
        - __NOTIFICATION_WORKFLOW__: the notification process advancement
      type: string
      enum:
        - NOTIFICATION_CREATE
        - NOTIFICATION_VISUALIZATION
        - NOTIFICATION_WORKFLOW
      x-enum-varnames:
        - NOTIFICATION_CREATE
        - NOTIFICATION_VISUALIZATION
        - NOTIFICATION_WORKFLOW
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []