swagger: '2.0'
info:
  version: 1.0.0
  title: Swagger log extractor
  description: API description for log extractor project
tags:
  - name: persons
    description: Operations about a person
  - name: logs
    description: Operations about logs
basePath: "/logextractor/v1"
schemes:
  - https
  - http
paths:
  '/persons/basicData':
    get:
      tags:
        - persons
      operationId: getPersonBasicData
      summary: Get the person's fiscal code or ID
      description: Return the person's fiscal code or ID depending on the input received
      produces:
        - application/json
      parameters:
        - name: ticketNumber
          in: query
          description: >-
            The number of the ticket for which the user is performing the extraction
          type: integer
          required: false
        - name: taxId
          in: query
          description: Fiscal code of the person whose ID must be returned
          type: string
          required: false
        - name: personId
          in: query
          description: ID of the person whose fiscal code must be returned
          type: string
          required: false
      responses:
        '200':
          description: The operation has been successfully completed
          schema:
            $ref: '#/definitions/PersonData'
        '400':
          description: In case of errors during the request validation, an error message is returned
          schema:
            $ref: '#/definitions/ApiError400'
        '500':
          description: In case of errors during the request elaboration, an error message is returned
          schema:
            $ref: '#/definitions/ApiError500'
  '/logs/persons':
    get:
      tags:
        - logs
      operationId: getPersonsLogs
      summary: >-
        Download the logs' archive related to a person's own activities or on a notification
      description: Download the zip file and return the password to be shown to the user
      produces:
        - application/json
      parameters:
        - name: ticketNumber
          in: query
          description: >-
            The number of the ticket for which the user is performing the
            extraction
          type: integer
          required: true
        - name: taxId
          in: query
          description: Fiscal code of the person whose ID must be returned
          type: string
          required: false
        - name: referenceDate
          in: query
          description: The reference date for log extraction
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          required: false
        - name: personId
          in: query
          description: ID of the person whose fiscal code must be returned
          type: string
          required: false
        - name: iun
          in: query
          description: The IUN of the notification
          type: integer
          required: false
        - name: dateFrom
          in: query
          description: The extraction period start date
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          required: false
        - name: dateTo
          in: query
          description: The extraction period end date
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          required: false
        - name: deanonimization
          in: query
          description: Flag that indicates if the deanonimization must be performed or not
          type: boolean
          required: true
      responses:
        '200':
          description: The operation has been successfully completed
          schema:
            $ref: '#/definitions/DownloadLog'
        '400':
          description: In case of errors during the request validation, an error message is returned
          schema:
            $ref: '#/definitions/ApiError400'
        '500':
          description: In case of errors during the request elaboration, an error message is returned
          schema:
            $ref: '#/definitions/ApiError500'
  '/logs/operators':
    get:
      tags:
        - logs
      operationId: getOperatorsLogs
      summary: >-
        Download the logs' archive related to a person activities and its operators' ones
      description: Download the zip file and return the password to be shown to the user
      produces:
        - application/json
      parameters:
        - name: ticketNumber
          in: query
          description: >-
            The number of the ticket for which the user is performing the
            extraction
          type: integer
          required: true
        - name: taxId
          in: query
          description: Fiscal code of the person whose ID must be returned
          type: string
          required: true
        - name: dateFrom
          in: query
          description: The extraction period start date
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          required: true
        - name: dateTo
          in: query
          description: The extraction period end date
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          required: true
      responses:
        '200':
          description: The operation has been successfully completed
          schema:
            $ref: '#/definitions/DownloadLog'
        '400':
          description: In case of errors during the request validation, an error message is returned
          schema:
            $ref: '#/definitions/ApiError400'
        '500':
          description: In case of errors during the request elaboration, an error message is returned
          schema:
            $ref: '#/definitions/ApiError500'
  '/logs/notifications/info':
    get:
      tags:
        - logs
      operationId: getNotificationsInfoLogs
      summary: Download the logs' archive containing the full info of a notification
      description: Download the zip file and return the password to be shown to the user
      produces:
        - application/json
      parameters:
        - name: ticketNumber
          in: query
          description: >-
            The number of the ticket for which the user is performing the extraction
          type: integer
          required: true
        - name: iun
          in: query
          description: The IUN of the notification
          type: integer
          required: true
      responses:
        '200':
          description: The operation has been successfully completed
          schema:
            $ref: '#/definitions/DownloadLog'
        '400':
          description: In case of errors during the request validation, an error message is returned
          schema:
            $ref: '#/definitions/ApiError400'
        '500':
          description: In case of errors during the request elaboration, an error message is returned
          schema:
            $ref: '#/definitions/ApiError500'
  '/logs/notifications/monthly':
    get:
      tags:
        - logs
      operationId: getNotificationsMonthlyStatsLogs
      summary: Download the logs' archive containing the notifications sent in a specific month
      description: Download the zip file and return the password to be shown to the user
      produces:
        - application/json
      parameters:
        - name: ticketNumber
          in: query
          description: >-
            The number of the ticket for which the user is performing the extraction
          type: integer
          required: true
        - name: ipaCode
          in: query
          description: The IPA code of a public administration entity
          type: integer
          required: true
        - name: referenceMonth
          in: query
          description: The reference month
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          required: true
      responses:
        '200':
          description: The operation has been successfully completed
          schema:
            $ref: '#/definitions/DownloadLog'
        '400':
          description: In case of errors during the request validation, an error message is returned
          schema:
            $ref: '#/definitions/ApiError400'
        '500':
          description: In case of errors during the request elaboration, an error message is returned
          schema:
            $ref: '#/definitions/ApiError500'
definitions:
  PersonData:
    type: object
    required:
      - data
    properties:
      data:
        type: string
        example: qwerty
  DownloadLog:
    type: object
    required:
      - password
    properties:
      password:
        type: string
        example: qwerty
  ApiError400:
    type: object
    required:
      - status
      - message
    properties:
      status:
        type: integer
        example: 400
      message:
        type: string
        example: Informazioni non valide
  ApiError500:
    type: object
    required:
      - status
      - message
    properties:
      status:
        type: integer
        example: 500
      message:
        type: string
        example: Errore nell'elaborazione della richiesta