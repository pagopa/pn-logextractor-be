AWSTemplateFormatVersion: "2010-09-09"

Description: |
  CloudFormation definition of Log Extractor Frontend subsystem


Parameters:
  ApiId:
    Type: String
    Description: Rest API id

  ApiStageName:
    Type: String
    Description: Rest API stage name

  LogBucketDomainName:
    Type: String
    Description: Bucket (domain name) to store CloudFront logs

  ProjectName:
    Type: String
    Description: Name of the project

Resources:
  Hosting:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: Private
      BucketName: !Sub ${ProjectName}-hosting
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  OAI:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${ProjectName}

  HostingPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref Hosting
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - "Fn::Sub": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OAI}"
            Action:
              - "s3:GetObject"
            Resource:
              - "Fn::Sub": ${Hosting.Arn}/*

  ApiOriginRequest:
    Type: "AWS::CloudFront::OriginRequestPolicy"
    Properties:
      OriginRequestPolicyConfig:
        Name: AllowOnlyAuthHeader
        Comment: Allows only Auth header
        CookiesConfig:
          CookieBehavior: none
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - Auth
        QueryStringsConfig:
          QueryStringBehavior: none

  ApiCache:
    Type: "AWS::CloudFront::CachePolicy"
    Properties:
      CachePolicyConfig:
        Comment: Disable caching and forward Authorization header
        DefaultTTL: 0
        MaxTTL: 1
        MinTTL: 0
        Name: DisabledAndForwardAuthorization
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingGzip: true
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Authorization
          QueryStringsConfig:
            QueryStringBehavior: none

  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: !Ref ApiCache
            Compress: true
            OriginRequestPolicyId: !Ref ApiOriginRequest
            PathPattern: "/logextractor/*"
            TargetOriginId: api
            ViewerProtocolPolicy: "https-only"
        Comment: !Sub ${ProjectName}
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # CachingOptimized
          TargetOriginId: s3_hosting
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        Logging:
          Bucket: !Ref LogBucketDomainName
        Origins:
          - DomainName: !GetAtt Hosting.RegionalDomainName
            Id: s3_hosting
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OAI}
          - DomainName: !Sub ${ApiId}.execute-api.${AWS::Region}.amazonaws.com
            Id: api
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
        PriceClass: PriceClass_100

Outputs:
  DistributionId:
    Description: Cloudfront distribution ID
    Value: !Ref Distribution

  DomainName:
    Description: Cloudfront distribution domain name
    Value: !GetAtt Distribution.DomainName