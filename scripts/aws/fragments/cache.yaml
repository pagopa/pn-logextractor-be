AWSTemplateFormatVersion: "2010-09-09"

Description: |
  CloudFormation definition of Log Extractor additional services


Parameters:
  NodeType:
    Type: String
    Description: Cache node type (i.e. cache.t2.micro)

  ProjectName:
    Type: String
    Description: Name of the project

  Replicas:
    Type: Number
    Description: Number of nodes

  SubnetIds:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: Private subnets to deploy resources into

  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: VPC id for the cluster

Resources:
  SubnetGroup:
    Type: "AWS::ElastiCache::SubnetGroup"
    Properties:
      Description: Cache Subnet Group
      SubnetIds: !Ref SubnetIds

  AllowedSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Earn permissions to access cache
      GroupName: !Sub ${ProjectName}-cache
      VpcId: !Ref VpcId

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Open Redis port
      GroupName: !Sub ${ProjectName}-redis
      SecurityGroupIngress:
        - FromPort: 6379
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
          ToPort: 6379
      VpcId: !Ref VpcId

  Cluster:
    Type: "AWS::ElastiCache::CacheCluster"
    Properties:
      CacheNodeType: !Ref NodeType
      CacheSubnetGroupName: !Ref SubnetGroup
      Engine: redis
      NumCacheNodes: !Ref Replicas
      VpcSecurityGroupIds:
        - "Fn::GetAtt":
            - SecurityGroup
            - GroupId

Outputs:
  AllowedSecurityGroupId:
    Description: The id of the security group that can access the cache cluster
    Value: !GetAtt AllowedSecurityGroup.GroupId

  RedisEndpoint:
    Description: The id of the security group that can access the cache cluster
    Value: !GetAtt Cluster.RedisEndpoint.Address
